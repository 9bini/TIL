Picking System
주문
피킹피스트
sku
주문 -> 피킹리스트 -> 피킹 -> 피킹 완료

------------ TO-DO-----------------

피킹 중단
피킹 -> 에러




------------- DONE ----------------
ORDER생성
Order 검증
Order.state => enum
OrderDetail validation 추가
OrderDetail 생성
Order validation 에 OrderDetail  검증 추가
피킹리스트 생성
피킹리스트 상태 enum 생성
주문 상태 변경
피커리스트 - 주문 연관관계 변경
피커 리스트를 피커에게 할당
피커를 구체화
피커 할당 할 때 피킹리스트도 할당
피킹리스트 Assign 할때 피커도 할당
피킹
피킹 완료

--------------- 필기 --------------

실수 환경에 따라 테스트 질과 양을 조절해야한다.


이것까지 테스트할 필요가 있는가
    있으면 의존성 주입을 받고
    없으면 Mocking 하자

@Mock 객체 필드를
    사용하려면 @Spy
    Mocking 하려면 @Mock

객체 영역을 넘지말라
현제 거의 해피테스트 진행

피킹 프로그램을 바로 구현하는 것 보단 피킹 프로그램에 대한 배경지식을 올려준 다음 진행하면 훨씬 수월할 거 같다.

주의사항
 테스트 코드부터 작성한다.
 -> 테스트 코드를 이용하여 명세를 만든다.
 테스트코드는 결과를 먼저 만든다.

 진행 중인 프로젝트에 TDD를 적용하기위한 방법
 이미 진행중인 프로젝트에 TDD를 적용하기엔 리스크가 따른다. 

 새로운 생성되는 기능들을 TDD를 이용하여 작성하고 기존 기능들은 테스트코드 커버리지를 최대한 높힌다.
 커버리지가 특정 기준보다 높아진 경우에 기존 코드에도 TDD를 적용하기 시작한다. - 초반에 사용했던게 아니서 배포, 테스트에 시간을 많이 투자해야한다.

배포와 테스트 시간이 오래걸린다.